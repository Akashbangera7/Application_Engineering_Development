/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AirAmbulance;

import userinterface.Hospital.*;
import userinterface.DoctorRole.*;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Hospital.Hospital;
import Business.Hospital.HospitalDirectory;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;


/**
 *
 * @author Pornima
 */
public class CreateAirAmbulanceJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private OrganizationDirectory orgdir;
    private EcoSystem business;
    private Enterprise enterprise;
    private DoctorOrganization organization;
    private HospitalDirectory hospitaldir;
    private Hospital hospital;

    /**
     * Creates new form CheckHospitalJPanel
     */
    /*public CreateHospitalJPanel() {
//        initComponents();
//        this.userProcessContainer = userProcessContainer;
//        this.organization =  organization;        
//        this.userAccount = userAccount;
//        this.enterprise = enterprise;
//        this.orgdir = enterprise.getOrganizationDirectory();
    }*/

   /* CreateHospitalJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem business, Enterprise enterprise, OrganizationDirectory orgdir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization =  organization;        
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.orgdir = enterprise.getOrganizationDirectory();//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/

    CreateAirAmbulanceJPanel(JPanel userProcessContainer, Enterprise enterprise) {
      initComponents();
        this.userProcessContainer = userProcessContainer;
//        this.organization =  organization;        
//        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.hospitaldir = enterprise.getHospitalDirectory();
       // this.orgdir = enterprise.getOrganizationDirectory(); // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    populateTable();
    }

    /*CreateHospitalJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospital = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        TxtFldHospitalId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtFldHospitalName = new javax.swing.JTextField();
        TxtFldLocation = new javax.swing.JTextField();
        TxtFldTreatmentAvailability = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnHospitalSubmit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AirAmbulancel_ID", "AirAmbulance_Name", "Patient_Capacity", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHospital);
        if (tblHospital.getColumnModel().getColumnCount() > 0) {
            tblHospital.getColumnModel().getColumn(0).setResizable(false);
            tblHospital.getColumnModel().getColumn(1).setResizable(false);
            tblHospital.getColumnModel().getColumn(2).setResizable(false);
            tblHospital.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 184, -1, 122));

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 324, -1, -1));
        add(TxtFldHospitalId, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 65, 59, -1));

        jLabel1.setText("AirAmbulance_ID");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 68, -1, -1));

        jLabel2.setText("AirAmbulance_Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 106, -1, -1));
        add(TxtFldHospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 103, 59, -1));
        add(TxtFldLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 65, 54, -1));
        add(TxtFldTreatmentAvailability, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 103, 54, -1));

        jLabel3.setText("Patient Capacity");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 68, -1, -1));

        jLabel4.setText("Availability");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 106, -1, -1));

        btnHospitalSubmit.setText("Submit");
        btnHospitalSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalSubmitActionPerformed(evt);
            }
        });
        add(btnHospitalSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 129, -1, -1));

        btnDelete.setText("Delete record");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 324, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnHospitalSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalSubmitActionPerformed
        // TODO add your handling code here:
        Hospital hospital = new Hospital();
        //HospitalDirectory var = new HospitalDirectory();
        //Hospital hospital;
      // hospital = hospitaldir.createHospital();
      if(enterprise.getHospitalDirectory() == null){
          enterprise.setHospitalDirectory(new HospitalDirectory());
          hospitaldir= enterprise.getHospitalDirectory();
          System.out.println("usernullhos");
      }
        hospital = hospitaldir.addHospital();
        hospital.setHospitalId(TxtFldHospitalId.getText().toString());
        hospital.setHospitalLocation(TxtFldLocation.getText().toString());
        hospital.setHospitalName(TxtFldHospitalName.getText().toString());
        hospital.setHospitalTreatAvailability(TxtFldTreatmentAvailability.getText().toString());
       // hospital.setHospitalDept(TxtFldDepartment.getText().toString());
        //hospital = hospitaldir.addHospital();
        
        populateTable();
        
    }//GEN-LAST:event_btnHospitalSubmitActionPerformed

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblHospital.getModel();
        
        model.setRowCount(0);
        for(Hospital h : hospitaldir.gethospitalList()){
       // for (Hospital h : organization.getHospitalDirectory().gethospitalList()){
            
            Object[] row = new Object[5];
            row[0] = h;
            row[1] = h.getHospitalName();
            row[2] = h.getHospitalLocation();
            row[3] = h.getHospitalTreatAvailability();
            row[4] = h.getHospitalDept();
            model.addRow(row);
        }
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
      int p = JOptionPane.showConfirmDialog(null, "Confirm delete?","Delete",JOptionPane.YES_NO_OPTION);
      if(p==0){
      
      
      
        int selectedrow = tblHospital.getSelectedRow();
        
        if(selectedrow >= 0)
        {
        Hospital h = (Hospital) tblHospital.getValueAt(selectedrow, 0);

        hospitaldir.deleteVitals(h);
       
        
        JOptionPane.showMessageDialog(null, "Record has been deleted..");
        populateTable();
         
    }                                             

        else
        
                JOptionPane.showMessageDialog(null,"Please select any row.");
    }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtFldHospitalId;
    private javax.swing.JTextField TxtFldHospitalName;
    private javax.swing.JTextField TxtFldLocation;
    private javax.swing.JTextField TxtFldTreatmentAvailability;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHospitalSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHospital;
    // End of variables declaration//GEN-END:variables
}
